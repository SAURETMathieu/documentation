"use strict";(self.webpackChunksauret_doc=self.webpackChunksauret_doc||[]).push([[9882],{2442:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var a=t(5893),i=t(1151);const l={id:"template-input",title:"Template input",sidebar_label:"Template d'input dynamique"},o=void 0,s={id:"react/templates/template-input",title:"Template input",description:"Fonction Input",source:"@site/docs/react/templates/input.md",sourceDirName:"react/templates",slug:"/react/templates/template-input",permalink:"/documentation/docs/react/templates/template-input",draft:!1,unlisted:!1,editUrl:"https://github.com/SAURETMathieu/docs/react/templates/input.md",tags:[],version:"current",frontMatter:{id:"template-input",title:"Template input",sidebar_label:"Template d'input dynamique"},sidebar:"reactSidebar",previous:{title:"Templates",permalink:"/documentation/docs/react/templates"},next:{title:"Template de tableau Back-office",permalink:"/documentation/docs/react/templates/template-table"}},r={},d=[{value:"Fonction Input",id:"fonction-input",level:2},{value:"Utilisation",id:"utilisation",level:2},{value:"Initialisation des options",id:"initialisation-des-options",level:2},{value:"Initialiser le formulaire",id:"initialiser-le-formulaire",level:2},{value:"Fonction inputChange",id:"fonction-inputchange",level:2},{value:"Fonction handleFileChange",id:"fonction-handlefilechange",level:2},{value:"Exemple de formulaire",id:"exemple-de-formulaire",level:2},{value:"Fonction handleSubmit",id:"fonction-handlesubmit",level:2}];function p(e){const n={code:"code",h2:"h2",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"fonction-input",children:"Fonction Input"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'import React from "react";\n\nfunction Input({ options, handleInputChange, handleFileChange }) {\n  const {\n    id,\n    label,\n    placeholder,\n    defaultValue,\n    errorMessage,\n    type,\n    className,\n    disabled,\n    title,\n    required,\n    ariaLabel,\n    format,\n    pattern,\n    minLength,\n    maxLength,\n    min,\n    max,\n    step,\n    autoComplete,\n    multiple,\n    accept,\n    src,\n  } = options;\n\n  const inputProps = {\n    id,\n    name: id,\n    placeholder,\n    defaultValue,\n    onChange: (event) =>\n      type === "file"\n        ? handleFileChange(id, event)\n        : handleInputChange(id, event),\n    disabled,\n    title,\n    required,\n    type: type || "text",\n    className: "control has-icons-left has-icons-right",\n    "aria-label": ariaLabel,\n    ...(errorMessage && { "aria-describedby": `${id}-help` }),\n    format,\n    pattern,\n    minLength,\n    maxLength,\n    min,\n    max,\n    step,\n    autoComplete,\n    multiple,\n    accept,\n  };\n\n  return (\n    <div className={className}>\n      {label && (\n        <label htmlFor={id} className="label">\n          {label}\n        </label>\n      )}\n      {type === "textarea" && <textarea id={id} {...inputProps} />}\n      {type === "select" && (\n        <select id={id} {...inputProps}>\n          {options &&\n            options.options &&\n            options.options.map((option) => (\n              <option key={option.id} value={option.id}>\n                {option.name}\n              </option>\n            ))}\n        </select>\n      )}\n      {type !== "textarea" && type !== "select" && (\n        <>\n          <input type={type} id={id} {...inputProps} />\n          {type === "file" && id === "url_image" && (\n            <img className="image-preview" src={src} alt="Preview" />\n          )}\n        </>\n      )}\n      {errorMessage && (\n        <div id={`${id}-help`} className="form-text text-danger">\n          {errorMessage}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n'})}),"\n",(0,a.jsx)(n.h2,{id:"utilisation",children:"Utilisation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Input\n  key={options.id}\n  options={options}\n  handleInputChange={handleInputChange}\n  handleFileChange={handleFileChange}\n/>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"initialisation-des-options",children:"Initialisation des options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "options": {\n    "lastname": {\n      "id": "lastname",\n      "label": "Nom",\n      "type": "text",\n      "placeholder": "Nom",\n      "required": true\n    },\n    "firstname": {\n      "id": "firstname",\n      "label": "Pr\xe9nom",\n      "type": "text",\n      "placeholder": "Pr\xe9nom",\n      "required": true\n    },\n    "password": {\n      "id": "password",\n      "label": "Mot de passe",\n      "type": "password",\n      "placeholder": "Mot de passe",\n      "required": true\n    },\n    "year": {\n      "id": "year",\n      "label": "Ann\xe9e",\n      "type": "number",\n      "placeholder": "Ann\xe9e",\n      "min": 1900,\n      "max": 2100,\n      "step": 1,\n      "required": true\n    },\n    "description": {\n      "id": "description",\n      "label": "Description",\n      "type": "textarea",\n      "placeholder": "Description",\n      "required": true,\n      "className": "textarea-container"\n    },\n    "label_id": {\n      "id": "label_id",\n      "label": "Labels",\n      "type": "select",\n      "required": true\n    },\n    "starting_date": {\n      "id": "starting_date",\n      "label": "Date de d\xe9but",\n      "type": "datetime-local",\n      "required": true\n    },\n    "url_sound": {\n      "id": "url_sound",\n      "label": "Son",\n      "type": "file",\n      "accept": "audio/*",\n      "required": true,\n      "className": "input-file-container"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"initialiser-le-formulaire",children:"Initialiser le formulaire"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'const [formData, setFormData] = useState({});\n\nconst initialForm = () => {\n  const initialFormData = {};\n\n  optionsList?.forEach((option) => {\n    initialFormData[option.id] = option.defaultValue || "";\n  });\n\n  setFormData(initialFormData);\n};\n'})}),"\n",(0,a.jsx)(n.h2,{id:"fonction-inputchange",children:"Fonction inputChange"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"const handleInputChange = (id, event) => {\n  const { value } = event.target;\n  setFormData((prevFormData) => ({\n    ...prevFormData,\n    [id]: value,\n  }));\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"fonction-handlefilechange",children:"Fonction handleFileChange"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'const handleFileChange = (id, event) => {\n  setFormData({\n    ...formData,\n    [id]: event.target.files[0],\n  });\n  if (event.target.name === "url_image") {\n    document.querySelector(".image-preview").src = URL.createObjectURL(\n      event.target.files[0]\n    );\n  }\n};\n'})}),"\n",(0,a.jsx)(n.h2,{id:"exemple-de-formulaire",children:"Exemple de formulaire"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'return (\n  <form\n    key={formKey}\n    className="create-form"\n    onSubmit={handleSubmit}\n    encType="multipart/form-data"\n  >\n    {modalMode === "create" &&\n      optionsList &&\n      optionsList.map((options) => (\n        <Input\n          key={options.id}\n          options={options}\n          handleInputChange={handleInputChange}\n          handleFileChange={handleFileChange}\n        />\n      ))}\n\n    {modalMode === "update" &&\n      optionsUpdate &&\n      optionsUpdate.map((options) => (\n        <Input\n          key={options.id}\n          options={options}\n          handleInputChange={handleInputChange}\n          handleFileChange={handleFileChange}\n        />\n      ))}\n    <div className="modal-submit-buttons">\n      <button\n        type="button"\n        className="is-cancel close-modal-btn"\n        onClick={handleClose}\n        aria-label="Close modal"\n      >\n        Annuler\n      </button>\n      <button\n        type="submit"\n        className="is-success"\n        onClick={handleSubmit}\n        aria-label="Valid form"\n      >\n        Confirmer\n      </button>\n    </div>\n  </form>\n);\n'})}),"\n",(0,a.jsx)(n.h2,{id:"fonction-handlesubmit",children:"Fonction handleSubmit"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'const handleSubmit = async (event) => {\n  event.preventDefault();\n  const formElement = event.target.closest("form");\n\n  if (formElement && formElement.checkValidity()) {\n    if (!formData.password || !formData.passwordConfirm) {\n      delete formData.password;\n      delete formData.passwordConfirm;\n    }\n    const resultData =\n      modalMode === "create"\n        ? await fetchData("POST", route, formData, true)\n        : await fetchData(\n            "PATCH",\n            `${route}/${itemSelected.id}`,\n            formData,\n            true\n          );\n    if (resultData) {\n      if (modalMode === "create") {\n        handleDataCreate(resultData[0]);\n        toast.success("Cr\xe9ation r\xe9ussie.");\n      }\n      if (modalMode === "update") {\n        handleDataUpdate(resultData[0]);\n        toast.success("Modification r\xe9ussie.");\n      }\n      setFormKey((prevKey) => prevKey + 1);\n      setItemSelected(null);\n      handleClose();\n    }\n  } else {\n    toast.error("Certains champs du formulaire ne sont pas valides.");\n  }\n};\n'})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var a=t(7294);const i={},l=a.createContext(i);function o(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);